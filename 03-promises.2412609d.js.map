{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGA,IAAMC,EAAO,CACXC,UAAWC,SAASC,iBAAiB,SACrCC,UAAWF,SAASC,iBAAiB,SACrCE,OAAQH,SAASI,cAAc,UAC/BC,QAASL,SAASI,cAAc,SAG9BE,EAAW,GAOf,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAYP,SAASQ,EAAUC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC7Bb,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,CAG/D,SAASa,EAAQJ,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAC3Bb,EAAAuB,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANZ,EAAM,M,EC5C7C,SAAyBe,GAEtC,IAAMC,EAASD,EAAKzB,UACpB2B,MAAMC,KAAKF,GAAQG,KAAI,SAAAC,GACrBA,EAAKC,MAAMC,QAAU,cACrBF,EAAKC,MAAME,cAAgB,SAC3BH,EAAKC,MAAMG,YAAc,M,IAI3B,IAAMC,EAASV,EAAKtB,UACpBwB,MAAMC,KAAKO,GAAQN,KAAI,SAAAC,GACrBA,EAAKC,MAAMK,QAAU,K,IAIvBX,EAAKrB,OAAO2B,MAAMK,QAAU,OAG5BX,EAAKnB,QAAQyB,MAAMC,QAAU,OAC7BP,EAAKnB,QAAQyB,MAAMM,WAAa,K,CDRlC,CAAgBtC,GAEhBA,EAAKO,QAAQgC,iBAAiB,UAwC9B,SAAoBC,GAClBA,EAAEC,iBAPFzC,EAAKK,OAAOqC,aAAa,WAAY,YAUrC,IADA,IAAQ/B,EAAwBH,EAAxBG,MAAOgC,EAAiBnC,EAAjBmC,OAAQC,EAASpC,EAAToC,KACdC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAClCC,QAAQC,IAAIF,GAEZpC,EAAcoC,EAAI,EADGD,EAAOC,EAAIlC,GAE7BqC,KAAK7B,GACL8B,MAAMzB,E,KAhDbxB,EAAKO,QAAQgC,iBAAiB,SAgB9B,SAAsBC,GACpBhC,EAASG,MAAQuC,OAAOV,EAAEW,cAAcC,SAASzC,MAAM0C,OACvD7C,EAASoC,KAAOM,OAAOV,EAAEW,cAAcC,SAASR,KAAKS,OACrD7C,EAASmC,OAASO,OAAOV,EAAEW,cAAcC,SAAST,OAAOU,OAiBzDrD,EAAKK,OAAOiD,gBAAgB,W","sources":["src/js/03-promises.js","src/js/functions/task-3/interface.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport interfaceStyles from './functions/task-3/interface';\n\nconst refs = {\n  labelRefs: document.querySelectorAll('label'),\n  inputRefs: document.querySelectorAll('input'),\n  btnRef: document.querySelector('button'),\n  formRef: document.querySelector('form'),\n};\n\nlet formData = {};\n\ninterfaceStyles(refs);\n\nrefs.formRef.addEventListener('submit', onBtnClick);\nrefs.formRef.addEventListener('input', onInputValue);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onInputValue(e) {\n  formData.delay = Number(e.currentTarget.elements.delay.value);\n  formData.step = Number(e.currentTarget.elements.step.value);\n  formData.amount = Number(e.currentTarget.elements.amount.value);\n\n  anableBtn();\n}\n\nfunction onSuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\nfunction disableBtn() {\n  refs.btnRef.setAttribute('disabled', 'disabled');\n}\nfunction anableBtn() {\n  refs.btnRef.removeAttribute('disabled');\n}\n\nfunction onBtnClick(e) {\n  e.preventDefault();\n  disableBtn();\n  const { delay, amount, step } = formData;\n  for (let i = 0; i < amount; i += 1) {\n    console.log(i);\n    const PromiceDelay = step * i + delay;\n    createPromise(i + 1, PromiceDelay)\n      .then(onSuccess)\n      .catch(onError);\n  }\n}\n","export default function interfaceStyles(refs) {\n  // lables\n  const lables = refs.labelRefs;\n  Array.from(lables).map(item => {\n    item.style.display = 'inline-flex';\n    item.style.flexDirection = 'column';\n    item.style.marginRight = '10px';\n  });\n\n  // inputs\n  const inputs = refs.inputRefs;\n  Array.from(inputs).map(item => {\n    item.style.padding = '5px';\n  });\n\n  // btn\n  refs.btnRef.style.padding = '10px';\n\n  // form\n  refs.formRef.style.display = 'flex';\n  refs.formRef.style.alignItems = 'end';\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","labelRefs","document","querySelectorAll","inputRefs","btnRef","querySelector","formRef","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$onSuccess","param","Notify","success","concat","$ce04d3a99e08e73b$var$onError","failure","refs","lables","Array","from","map","item","style","display","flexDirection","marginRight","inputs","padding","alignItems","addEventListener","e","preventDefault","setAttribute","amount","step","i","console","log","then","catch","Number","currentTarget","elements","value","removeAttribute"],"version":3,"file":"03-promises.2412609d.js.map"}